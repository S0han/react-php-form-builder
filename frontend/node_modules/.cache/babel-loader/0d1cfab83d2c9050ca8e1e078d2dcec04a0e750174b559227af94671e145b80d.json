{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { thunk } from \"redux-thunk\";\nconst formReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_FIELD\":\n      return [...state, action.payload];\n    case \"REORDER_FIELDS\":\n      return action.payload;\n    case \"UPDATE_LABEL\":\n      return state.map(field => field.id === action.payload.id ? {\n        ...field,\n        label: action.payload.newLabel\n      } : field);\n    case \"UPDATE_PLACEHOLDER\":\n      return state.map(field => field.id === action.payload.id ? {\n        ...field,\n        placeholder: action.payload.newPlaceholder\n      } : field);\n    case \"UPDATE_OPTIONS\":\n      return state.map(field => field.id === action.payload.fieldId ? {\n        ...field,\n        options: action.payload.optionIndex !== null ? field.options.map((option, index) => index === action.payload.optionIndex ? action.payload.value : option) : [...field.options, action.payload.value] // Add new option if index is null\n      } : field);\n    case \"SET_FORM_FIELDS\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\nconst formNameReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case \"SET_FORM_NAME\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\nconst rootReducer = combineReducers({\n  formFields: formReducer,\n  formName: formNameReducer\n});\nconst store = createStore(rootReducer, applyMiddleware(thunk));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","formReducer","state","action","type","payload","map","field","id","label","newLabel","placeholder","newPlaceholder","fieldId","options","optionIndex","option","index","value","formNameReducer","rootReducer","formFields","formName","store"],"sources":["/Users/kanepereira/Training/react-php-form-builder/frontend/src/store.jsx"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { thunk } from \"redux-thunk\";\n\nconst formReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_FIELD\":\n      return [...state, action.payload];\n    case \"REORDER_FIELDS\":\n      return action.payload;\n    case \"UPDATE_LABEL\":\n      return state.map((field) =>\n        field.id === action.payload.id\n          ? { ...field, label: action.payload.newLabel }\n          : field\n      );\n    case \"UPDATE_PLACEHOLDER\":\n      return state.map((field) =>\n        field.id === action.payload.id\n          ? { ...field, placeholder: action.payload.newPlaceholder }\n          : field\n      );\n    case \"UPDATE_OPTIONS\":\n      return state.map((field) =>\n        field.id === action.payload.fieldId\n          ? {\n              ...field,\n              options:\n                action.payload.optionIndex !== null\n                  ? field.options.map((option, index) =>\n                      index === action.payload.optionIndex\n                        ? action.payload.value\n                        : option\n                    )\n                  : [...field.options, action.payload.value], // Add new option if index is null\n            }\n          : field\n      );\n    case \"SET_FORM_FIELDS\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst formNameReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case \"SET_FORM_NAME\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  formFields: formReducer,\n  formName: formNameReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk)\n);\n\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,SAASC,KAAK,QAAQ,aAAa;AAEnC,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAG,EAAE,EAAEC,MAAM,KAAK;EAC1C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,WAAW;MACd,OAAO,CAAC,GAAGF,KAAK,EAAEC,MAAM,CAACE,OAAO,CAAC;IACnC,KAAK,gBAAgB;MACnB,OAAOF,MAAM,CAACE,OAAO;IACvB,KAAK,cAAc;MACjB,OAAOH,KAAK,CAACI,GAAG,CAAEC,KAAK,IACrBA,KAAK,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAACG,EAAE,GAC1B;QAAE,GAAGD,KAAK;QAAEE,KAAK,EAAEN,MAAM,CAACE,OAAO,CAACK;MAAS,CAAC,GAC5CH,KACN,CAAC;IACH,KAAK,oBAAoB;MACvB,OAAOL,KAAK,CAACI,GAAG,CAAEC,KAAK,IACrBA,KAAK,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAACG,EAAE,GAC1B;QAAE,GAAGD,KAAK;QAAEI,WAAW,EAAER,MAAM,CAACE,OAAO,CAACO;MAAe,CAAC,GACxDL,KACN,CAAC;IACH,KAAK,gBAAgB;MACnB,OAAOL,KAAK,CAACI,GAAG,CAAEC,KAAK,IACrBA,KAAK,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAACQ,OAAO,GAC/B;QACE,GAAGN,KAAK;QACRO,OAAO,EACLX,MAAM,CAACE,OAAO,CAACU,WAAW,KAAK,IAAI,GAC/BR,KAAK,CAACO,OAAO,CAACR,GAAG,CAAC,CAACU,MAAM,EAAEC,KAAK,KAC9BA,KAAK,KAAKd,MAAM,CAACE,OAAO,CAACU,WAAW,GAChCZ,MAAM,CAACE,OAAO,CAACa,KAAK,GACpBF,MACN,CAAC,GACD,CAAC,GAAGT,KAAK,CAACO,OAAO,EAAEX,MAAM,CAACE,OAAO,CAACa,KAAK,CAAC,CAAE;MAClD,CAAC,GACDX,KACN,CAAC;IACH,KAAK,iBAAiB;MACpB,OAAOJ,MAAM,CAACE,OAAO;IACvB;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAED,MAAMiB,eAAe,GAAGA,CAACjB,KAAK,GAAG,EAAE,EAAEC,MAAM,KAAK;EAC9C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,eAAe;MAClB,OAAOD,MAAM,CAACE,OAAO;IACvB;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAED,MAAMkB,WAAW,GAAGtB,eAAe,CAAC;EAClCuB,UAAU,EAAEpB,WAAW;EACvBqB,QAAQ,EAAEH;AACZ,CAAC,CAAC;AAEF,MAAMI,KAAK,GAAG1B,WAAW,CACvBuB,WAAW,EACXrB,eAAe,CAACC,KAAK,CACvB,CAAC;AAED,eAAeuB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}