{"ast":null,"code":"var _jsxFileName = \"/Users/kanepereira/Training/react-php-form-builder/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { addField, reorderFields, updateLabel, updatePlaceholder, updateOptions } from \"./redux/actions/formFieldActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormField = ({\n  field,\n  dispatch\n}) => {\n  const commonStyles = {\n    padding: \"10px\",\n    margin: \"10px 0\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"4px\",\n    backgroundColor: \"white\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: commonStyles,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"8px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: field.label,\n        onChange: e => dispatch(updateLabel(field.id, e.target.value)),\n        style: {\n          width: \"100%\",\n          padding: \"4px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), field.type === \"textInput\" && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: field.placeholder,\n      style: {\n        width: \"100%\",\n        padding: \"8px\"\n      },\n      onChange: e => dispatch(updatePlaceholder(field.id, e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), field.type === \"textArea\" && /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: field.placeholder,\n      style: {\n        width: \"100%\",\n        minHeight: \"80px\",\n        padding: \"8px\"\n      },\n      onChange: e => dispatch(updatePlaceholder(field.id, e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), field.type === \"selectDropdown\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        style: {\n          width: \"100%\",\n          padding: \"8px\"\n        },\n        children: field.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"8px\"\n        },\n        children: [field.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: option,\n          onChange: e => dispatch(updateOptions(field.id, index, e.target.value)),\n          style: {\n            width: \"100%\",\n            margin: \"4px 0\",\n            padding: \"4px\"\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => dispatch(updateOptions(field.id, null, \"New Option\")),\n          style: {\n            marginTop: \"8px\"\n          },\n          children: \"+ Add Option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), field.type === \"checkbox\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [field.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"4px 0\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          style: {\n            marginRight: \"8px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: option,\n          onChange: e => dispatch(updateOptions(field.id, index, e.target.value)),\n          style: {\n            width: \"80%\",\n            padding: \"4px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(updateOptions(field.id, null, \"New Option\")),\n        style: {\n          marginTop: \"8px\"\n        },\n        children: \"+ Add Option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), field.type === \"radioButtons\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [field.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"4px 0\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `radio-${field.id}`,\n          style: {\n            marginRight: \"8px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: option,\n          onChange: e => dispatch(updateOptions(field.id, index, e.target.value)),\n          style: {\n            width: \"80%\",\n            padding: \"4px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(updateOptions(field.id, null, \"New Option\")),\n        style: {\n          marginTop: \"8px\"\n        },\n        children: \"+ Add Option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = FormField;\nconst App = () => {\n  _s();\n  const dispatch = useDispatch();\n  const formFields = useSelector(state => state.formFields);\n  const fieldComponents = [{\n    id: \"textInput\",\n    label: \"Text Input\"\n  }, {\n    id: \"textArea\",\n    label: \"Text Area\"\n  }, {\n    id: \"selectDropdown\",\n    label: \"Dropdown\"\n  }, {\n    id: \"checkbox\",\n    label: \"Checkbox\"\n  }, {\n    id: \"radioButtons\",\n    label: \"Radio Buttons\"\n  }];\n  const handleOnDragEnd = result => {\n    const {\n      destination,\n      source\n    } = result;\n    if (!destination) return;\n    if (source.droppableId === \"sidebar\" && destination.droppableId === \"canvas\") {\n      const newField = {\n        id: Date.now(),\n        type: source.draggableId,\n        label: \"Field Label\",\n        placeholder: \"Placeholder text\",\n        options: [\"Option 1\"],\n        required: false\n      };\n      dispatch(addField(newField));\n    } else if (source.droppableId === \"canvas\" && destination.droppableId === \"canvas\") {\n      const reorderedFields = Array.from(formFields);\n      const [movedField] = reorderedFields.splice(source.index, 1);\n      reorderedFields.splice(destination.index, 0, movedField);\n      dispatch(reorderFields(reorderedFields));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      height: \"100vh\",\n      padding: \"20px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleOnDragEnd,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"250px\",\n          marginRight: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"sidebar\",\n          isDropDisabled: true,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            style: {\n              backgroundColor: \"#f5f5f5\",\n              borderRadius: \"8px\",\n              padding: \"15px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                marginBottom: \"15px\"\n              },\n              children: \"Form Components\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this), fieldComponents.map((component, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: component.id,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                style: {\n                  padding: \"12px\",\n                  marginBottom: \"10px\",\n                  backgroundColor: \"white\",\n                  border: \"1px solid #ddd\",\n                  borderRadius: \"6px\",\n                  cursor: \"grab\",\n                  ...provided.draggableProps.style\n                },\n                children: component.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 23\n              }, this)\n            }, component.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"canvas\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          style: {\n            flex: 1,\n            backgroundColor: \"#fafafa\",\n            borderRadius: \"8px\",\n            padding: \"20px\",\n            border: \"2px dashed #ddd\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginBottom: \"20px\"\n            },\n            children: \"Form Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), formFields.map((field, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: String(field.id),\n            index: index,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              style: {\n                marginBottom: \"15px\",\n                ...provided.draggableProps.style\n              },\n              children: /*#__PURE__*/_jsxDEV(FormField, {\n                field: field,\n                dispatch: dispatch\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 21\n            }, this)\n          }, field.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Supg5Jneng69sp+kCCkLbIHEPq8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"FormField\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useDispatch","useSelector","DragDropContext","Droppable","Draggable","addField","reorderFields","updateLabel","updatePlaceholder","updateOptions","jsxDEV","_jsxDEV","FormField","field","dispatch","commonStyles","padding","margin","border","borderRadius","backgroundColor","style","children","marginBottom","type","value","label","onChange","e","id","target","width","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","minHeight","options","map","option","index","marginTop","onClick","marginRight","name","_c","App","_s","formFields","state","fieldComponents","handleOnDragEnd","result","destination","source","droppableId","newField","Date","now","draggableId","required","reorderedFields","Array","from","movedField","splice","display","height","onDragEnd","isDropDisabled","provided","droppableProps","ref","innerRef","component","draggableProps","dragHandleProps","cursor","flex","String","_c2","$RefreshReg$"],"sources":["/Users/kanepereira/Training/react-php-form-builder/src/App.jsx"],"sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { addField, reorderFields, updateLabel, updatePlaceholder, updateOptions } from \"./redux/actions/formFieldActions\";\n\nconst FormField = ({ field, dispatch }) => {\n  const commonStyles = {\n    padding: \"10px\",\n    margin: \"10px 0\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"4px\",\n    backgroundColor: \"white\",\n  };\n\n  return (\n    <div style={commonStyles}>\n      <div style={{ marginBottom: \"8px\" }}>\n        <input\n          type=\"text\"\n          value={field.label}\n          onChange={(e) => dispatch(updateLabel(field.id, e.target.value))}\n          style={{ width: \"100%\", padding: \"4px\" }}\n        />\n      </div>\n\n      {field.type === \"textInput\" && (\n        <input\n          type=\"text\"\n          placeholder={field.placeholder}\n          style={{ width: \"100%\", padding: \"8px\" }}\n          onChange={(e) => dispatch(updatePlaceholder(field.id, e.target.value))}\n        />\n      )}\n\n      {field.type === \"textArea\" && (\n        <textarea\n          placeholder={field.placeholder}\n          style={{ width: \"100%\", minHeight: \"80px\", padding: \"8px\" }}\n          onChange={(e) => dispatch(updatePlaceholder(field.id, e.target.value))}\n        />\n      )}\n\n      {field.type === \"selectDropdown\" && (\n        <div>\n          <select style={{ width: \"100%\", padding: \"8px\" }}>\n            {field.options.map((option, index) => (\n              <option key={index}>{option}</option>\n            ))}\n          </select>\n          <div style={{ marginTop: \"8px\" }}>\n            {field.options.map((option, index) => (\n              <input\n                key={index}\n                type=\"text\"\n                value={option}\n                onChange={(e) => dispatch(updateOptions(field.id, index, e.target.value))}\n                style={{ width: \"100%\", margin: \"4px 0\", padding: \"4px\" }}\n              />\n            ))}\n            <button \n              onClick={() => dispatch(updateOptions(field.id, null, \"New Option\"))}\n              style={{ marginTop: \"8px\" }}\n            >\n              + Add Option\n            </button>\n          </div>\n        </div>\n      )}\n\n      {field.type === \"checkbox\" && (\n        <div>\n          {field.options.map((option, index) => (\n            <div key={index} style={{ margin: \"4px 0\" }}>\n              <input\n                type=\"checkbox\"\n                style={{ marginRight: \"8px\" }}\n              />\n              <input\n                type=\"text\"\n                value={option}\n                onChange={(e) => dispatch(updateOptions(field.id, index, e.target.value))}\n                style={{ width: \"80%\", padding: \"4px\" }}\n              />\n            </div>\n          ))}\n          <button \n            onClick={() => dispatch(updateOptions(field.id, null, \"New Option\"))}\n            style={{ marginTop: \"8px\" }}\n          >\n            + Add Option\n          </button>\n        </div>\n      )}\n\n      {field.type === \"radioButtons\" && (\n        <div>\n          {field.options.map((option, index) => (\n            <div key={index} style={{ margin: \"4px 0\" }}>\n              <input\n                type=\"radio\"\n                name={`radio-${field.id}`}\n                style={{ marginRight: \"8px\" }}\n              />\n              <input\n                type=\"text\"\n                value={option}\n                onChange={(e) => dispatch(updateOptions(field.id, index, e.target.value))}\n                style={{ width: \"80%\", padding: \"4px\" }}\n              />\n            </div>\n          ))}\n          <button \n            onClick={() => dispatch(updateOptions(field.id, null, \"New Option\"))}\n            style={{ marginTop: \"8px\" }}\n          >\n            + Add Option\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const formFields = useSelector((state) => state.formFields);\n\n  const fieldComponents = [\n    { id: \"textInput\", label: \"Text Input\" },\n    { id: \"textArea\", label: \"Text Area\" },\n    { id: \"selectDropdown\", label: \"Dropdown\" },\n    { id: \"checkbox\", label: \"Checkbox\" },\n    { id: \"radioButtons\", label: \"Radio Buttons\" }\n  ];\n\n  const handleOnDragEnd = (result) => {\n    const { destination, source } = result;\n    if (!destination) return;\n\n    if (source.droppableId === \"sidebar\" && destination.droppableId === \"canvas\") {\n      const newField = {\n        id: Date.now(),\n        type: source.draggableId,\n        label: \"Field Label\",\n        placeholder: \"Placeholder text\",\n        options: [\"Option 1\"],\n        required: false,\n      };\n      dispatch(addField(newField));\n    } else if (source.droppableId === \"canvas\" && destination.droppableId === \"canvas\") {\n      const reorderedFields = Array.from(formFields);\n      const [movedField] = reorderedFields.splice(source.index, 1);\n      reorderedFields.splice(destination.index, 0, movedField);\n      dispatch(reorderFields(reorderedFields));\n    }\n  };\n\n  return (\n    <div style={{ display: \"flex\", height: \"100vh\", padding: \"20px\" }}>\n      <DragDropContext onDragEnd={handleOnDragEnd}>\n        <div style={{ width: \"250px\", marginRight: \"20px\" }}>\n          <Droppable droppableId=\"sidebar\" isDropDisabled>\n            {(provided) => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                style={{\n                  backgroundColor: \"#f5f5f5\",\n                  borderRadius: \"8px\",\n                  padding: \"15px\"\n                }}\n              >\n                <h3 style={{ marginBottom: \"15px\" }}>Form Components</h3>\n                {fieldComponents.map((component, index) => (\n                  <Draggable key={component.id} draggableId={component.id} index={index}>\n                    {(provided) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={{\n                          padding: \"12px\",\n                          marginBottom: \"10px\",\n                          backgroundColor: \"white\",\n                          border: \"1px solid #ddd\",\n                          borderRadius: \"6px\",\n                          cursor: \"grab\",\n                          ...provided.draggableProps.style\n                        }}\n                      >\n                        {component.label}\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </div>\n\n        <Droppable droppableId=\"canvas\">\n          {(provided) => (\n            <div\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n              style={{\n                flex: 1,\n                backgroundColor: \"#fafafa\",\n                borderRadius: \"8px\",\n                padding: \"20px\",\n                border: \"2px dashed #ddd\"\n              }}\n            >\n              <h3 style={{ marginBottom: \"20px\" }}>Form Preview</h3>\n              {formFields.map((field, index) => (\n                <Draggable key={field.id} draggableId={String(field.id)} index={index}>\n                  {(provided) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      style={{\n                        marginBottom: \"15px\",\n                        ...provided.draggableProps.style\n                      }}\n                    >\n                      <FormField field={field} dispatch={dispatch} />\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}